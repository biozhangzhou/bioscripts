#!/bin/bash
#PBS -l walltime=50:00:00,nodes=1:ppn=20
#PBS -joe .
#PBS -d .
#PBS -l vmem=50g

echo "START:";
date;

export PICARD=/hpf/tools/centos6/picard-tools/2.0.1;
export JAVA_HOME=/hpf/tools/centos6/java/1.8.0_65/;
export GATK=/hpf/tools/centos6/gatk/3.5.0;
export GENOME=/home/naumenko/work/reference_2pass;

#please download and unpack your data
#fastq-dump
#fastq-dump -I --split-files $srr;
#rm ~/ncbi/public/sra/$srr.sra;

#please access the quality of the data, including adapters,
#otherwise we will use our own set of adapters

#trim
ln -s ~/bioscripts/illumina.adapters.fasta adapters.fasta;
fastq.trim.sh ${srr}_1.fastq ${srr}_2.fastq adapters.fasta 30 50 8;
mv ${srr}_1.fastq.trim ${srr}_1.fq;
mv ${srr}_2.fastq.trim ${srr}_2.fq;
rm ${srr}_1.fastq ${srr}_2.fastq;

#map
mkdir newreference;
ref=/home/naumenko/work/reference;

STAR --genomeDir $ref --readFilesIn ${srr}_1.fq ${srr}_2.fq --runThreadN 20;

STAR --runMode genomeGenerate --genomeDir newreference \
  --genomeFastaFiles $ref/GRCm38.p4.genome.fa \
    --sjdbGTFfile $ref/gencode.vM8.annotation.gtf --runThreadN 20 \
      --sjdbOverhang 99 \
        --sjdbFileChrStartEnd SJ.out.tab;
        
rm Aligned.out.sam;
        
STAR --genomeDir newreference --readFilesIn ${srr}_1.fq ${srr}_2.fq --runThreadN 20;
        
rm newreference/*;
rmdir newreference;

#sam2bam by picard
$JAVA_HOME/bin/java -Xmx40g -jar $PICARD/picard.jar AddOrReplaceReadGroups INPUT=Aligned.out.sam OUTPUT=rg_added_sorted.bam \
    SO=coordinate RGID=id RGLB=library RGPL=ILLUMINA RGPU=machine RGSM=sample

$JAVA_HOME/bin/java -Xms40g -jar $PICARD/picard.jar MarkDuplicates INPUT=rg_added_sorted.bam OUTPUT=dedupped.bam \
     CREATE_INDEX=true VALIDATION_STRINGENCY=SILENT METRICS_FILE=output.metrics

#split n trim
$JAVA_HOME/bin/java -Xmx40g -jar $GATK/GenomeAnalysisTK.jar -T SplitNCigarReads -R $GENOME/GRCm38.p4.genome.fa \
   -I dedupped.bam -o split.bam -rf ReassignOneMappingQuality -RMQF 255 -RMQT 60 -U ALLOW_N_CIGAR_READS \
   -et NO_ET -K /home/naumenko/tools/evolgenomicslab_gmail.com.key

#base recalibration
$JAVA_HOME/bin/java -Xmx40g -jar $GATK/GenomeAnalysisTK.jar -T BaseRecalibrator -R $GENOME/GRCm38.p4.genome.fa \
    -I split.bam -o recalibration_report.grp -et NO_ET -K /home/naumenko/tools/evolgenomicslab_gmail.com.key \
    -knownSites $GENOME/mgp.v5.merged.snps_all.dbSNP142.vcf.gz
$JAVA_HOME/bin/java -Xmx40g -jar $GATK/GenomeAnalysisTK.jar -T PrintReads -R $GENOME/GRCm38.p4.genome.fa -I split.bam \
    -BQSR recalibration_report.grp -o output.bam -et NO_ET -K /home/naumenko/tools/evolgenomicslab_gmail.com.key

#calling haplotypes
$JAVA_HOME/bin/java -Xmx40g -jar $GATK/GenomeAnalysisTK.jar -T HaplotypeCaller \
   -R $GENOME/GRCm38.p4.genome.fa -I output.bam -dontUseSoftClippedBases \
   -stand_call_conf 20.0 -stand_emit_conf 20.0 \
   -o output.vcf \
   -et NO_ET -K /home/naumenko/tools/evolgenomicslab_gmail.com.key

#variant filtration
$JAVA_HOME/bin/java -Xmx40g -jar $GATK/GenomeAnalysisTK.jar -T VariantFiltration \
    -R $GENOME/GRCm38.p4.genome.fa -V output.vcf -window 35 -cluster 3 -filterName FS -filter "FS > 30.0" \
    -filterName QD -filter "QD < 2.0" -o filtered.vcf \
    -et NO_ET -K /home/naumenko/tools/evolgenomicslab_gmail.com.key

rm dedupped.* Aligned.out.sam split.* rg_added_sorted.bam

mv filtered.vcf $srr.vcf;

#filter out snps without PASS in the filter field
vcftools --vcf $srr.vcf --remove-filtered-all --recode --recode-INFO-all --out $srr.pass;
mv $srr.pass.recode.vcf $srr.pass.vcf;

#annotate variants with snpEff
java -Xmx10g -jar ~/work/eff/snpEff/snpEff.jar GRCm38.82 $srr.pass.vcf > $srr.ann.vcf;

#remove non-coding and non-splicing variants
cat $srr.ann.vcf | egrep "^#|frameshift_variant|missense_variant|splice|start_lost|stop_gained|stop_lost|synonymous_variant" > $srr.coding.vcf;

#filter dnsnp database
cat $srr.coding.vcf | grep -v '^#'  | awk '{print $1"\t"$2}' | sed s/chr// > $srr.coding.list;
while read chr pos;
do
    tabix $GENOME/mgp.v5.merged.snps_all.dbSNP142.vcf.gz $chr:$pos-$pos >> $srr.dbsnp.vcf;
done < $srr.coding.list;

cat $srr.coding.vcf | grep -v '^#' | awk '{print $1"\t"$2}' | sed s/chr// | sort > $srr.coding.sorted;
cat $srr.dbsnp.vcf | grep -v '^#' | awk '{print $1"\t"$2}' | sort > $srr.dbsnp.sorted;

#cat $srr.coding.vcf | grep "^#" > $srr.mutations.vcf;
comm -23 $srr.coding.sorted $srr.dbsnp.sorted | awk '{print "chr"$1"\t"$2}' > $srr.mutations.list;
vcftools --positions $srr.mutations.list --recode --recode-INFO-all --vcf $srr.ann.vcf --out $srr.mutations;
mv $srr.mutations.recode.vcf $srr.mutations.vcf;

echo "END";
date;